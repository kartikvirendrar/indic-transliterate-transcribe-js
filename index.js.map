{"mappings":"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","sources":["src/index.js","src/util/index.js","src/util/touch-util.js","src/util/caret-util.js","src/constants/TriggerKeys.js","src/util/suggestions-util.js","src/util/getTransliterationLanguages.js","src/constants/Urls.js"],"sourcesContent":["import * as React from \"react\"\nimport { useEffect, useRef, useState, useMemo } from \"react\"\nimport { setCaretPosition, getInputSelection, isTouchEnabled } from \"./util\"\nimport getCaretCoordinates from \"textarea-caret\"\nimport { TriggerKeys } from \"./constants/TriggerKeys\"\nimport { getTransliterateSuggestions } from \"./util/suggestions-util\"\nimport { getTransliterationLanguages } from \"./util/getTransliterationLanguages\"\nimport { BASE_URL_TL } from \"./constants/Urls\"\n\nconst KEY_UP = \"ArrowUp\"\nconst KEY_DOWN = \"ArrowDown\"\nconst KEY_LEFT = \"ArrowLeft\"\nconst KEY_RIGHT = \"ArrowRight\"\nconst KEY_ESCAPE = \"Escape\"\n\nconst OPTION_LIST_Y_OFFSET = 10\nconst OPTION_LIST_MIN_WIDTH = 100\n\nexport const IndicTransliterate = ({\n  renderComponent = props => <input {...props} />,\n  lang = \"hi\",\n  offsetX = 0,\n  offsetY = 10,\n  onChange,\n  onChangeText,\n  onBlur,\n  value,\n  onKeyDown,\n  containerClassName = \"\",\n  containerStyles = {},\n  activeItemStyles = {},\n  maxOptions = 5,\n  hideSuggestionBoxOnMobileDevices = false,\n  hideSuggestionBoxBreakpoint = 450,\n\n  triggerKeys = [\n    TriggerKeys.KEY_SPACE,\n    TriggerKeys.KEY_ENTER,\n    TriggerKeys.KEY_RETURN,\n    TriggerKeys.KEY_TAB\n  ],\n\n  insertCurrentSelectionOnBlur = true,\n  showCurrentWordAsLastSuggestion = true,\n  enabled = true,\n  horizontalView = false,\n  customApiURL = BASE_URL_TL,\n  apiKey = \"\",\n  enableASR = false,\n  asrApiUrl = \"\",\n  ...rest\n}) => {\n  const [left, setLeft] = useState(0)\n  const [top, setTop] = useState(0)\n  const [selection, setSelection] = useState(0)\n  const [matchStart, setMatchStart] = useState(-1)\n  const [matchEnd, setMatchEnd] = useState(-1)\n  const inputRef = useRef(null)\n  const [windowSize, setWindowSize] = useState({ width: 0, height: 0 })\n  const [direction, setDirection] = useState(\"ltr\")\n  const [googleFont, setGoogleFont] = useState(null)\n  const [options, setOptions] = useState([])\n  const [logJsonArray, setLogJsonArray] = useState([])\n  const [numSpaces, setNumSpaces] = useState(0)\n  const [parentUuid, setParentUuid] = useState(\"0\")\n  const [uuid, setUuid] = useState(\n    Math.random()\n      .toString(36)\n      .substr(2, 9)\n  )\n  const [subStrLength, setSubStrLength] = useState(0)\n  const [restart, setRestart] = useState(true)\n\n  const shouldRenderSuggestions = useMemo(\n    () =>\n      hideSuggestionBoxOnMobileDevices\n        ? windowSize.width > hideSuggestionBoxBreakpoint\n        : true,\n    [windowSize, hideSuggestionBoxBreakpoint, hideSuggestionBoxOnMobileDevices]\n  )\n\n  const reset = () => {\n    // reset the component\n    setSelection(0)\n    setOptions([])\n  }\n\n  const handleSelection = index => {\n    const currentString = value\n    // create a new string with the currently typed word\n    // replaced with the word in transliterated language\n    const newValue =\n      currentString.substring(0, matchStart) +\n      options[index] +\n      \" \" +\n      currentString.substring(matchEnd + 1, currentString.length)\n\n    if (logJsonArray.length) {\n      let lastLogJson = logJsonArray[logJsonArray.length - 1]\n      let logJson = {\n        keystrokes: lastLogJson.keystrokes,\n        results: lastLogJson.results,\n        opted: options[index],\n        created_at: new Date().toISOString(),\n        language: lang\n      }\n      setLogJsonArray([...logJsonArray, logJson])\n      setNumSpaces(numSpaces + 1)\n    }\n\n    // set the position of the caret (cursor) one character after the\n    // the position of the new word\n    setTimeout(() => {\n      setCaretPosition(inputRef.current, matchStart + options[index].length + 1)\n    }, 1)\n\n    // bubble up event to the parent component\n    const e = {\n      target: { value: newValue }\n    }\n    onChangeText(newValue)\n    onChange && onChange(e)\n    reset()\n    return inputRef.current?.focus()\n  }\n\n  const renderSuggestions = async (lastWord, wholeText) => {\n    if (!shouldRenderSuggestions) {\n      return\n    }\n    // fetch suggestion from api\n    // const url = `https://www.google.com/inputtools/request?ime=transliteration_en_${lang}&num=5&cp=0&cs=0&ie=utf-8&oe=utf-8&app=jsapi&text=${lastWord}`;\n\n    // const numOptions = showCurrentWordAsLastSuggestion\n    //   ? maxOptions - 1\n    //   : maxOptions;\n\n    const data = await getTransliterateSuggestions(\n      lastWord,\n      customApiURL,\n      apiKey,\n      {\n        // numOptions,\n        showCurrentWordAsLastSuggestion,\n        lang\n      }\n    )\n    setOptions(data ?? [])\n    let logJson = {\n      keystrokes: wholeText,\n      results: data,\n      opted: \"\",\n      created_at: new Date().toISOString(),\n      language: lang\n    }\n\n    if (restart) {\n      setRestart(false)\n      setLogJsonArray([logJson])\n    } else {\n      setLogJsonArray([...logJsonArray, logJson])\n    }\n  }\n\n  const getDirectionAndFont = async lang => {\n    const langList = await getTransliterationLanguages()\n    const langObj = langList?.find(l => l.LangCode === lang)\n    return [\n      langObj?.Direction ?? \"ltr\",\n      langObj?.GoogleFont,\n      langObj?.FallbackFont\n    ]\n  }\n\n  const handleChange = e => {\n    const value = e.currentTarget.value\n\n    if (numSpaces == 0 || restart) {\n      if (value.length >= 4) {\n        setSubStrLength(value.length - 4)\n      } else {\n        setSubStrLength(0)\n      }\n    }\n\n    if (numSpaces >= 5) {\n      const finalJson = {\n        uuid: uuid,\n        parent_uuid: parentUuid,\n        word: value,\n        source:\n          localStorage.getItem(\"source\") != undefined\n            ? localStorage.getItem(\"source\")\n            : \"node-module\",\n        language: lang,\n        steps: logJsonArray\n      }\n      setLogJsonArray([])\n      setParentUuid(uuid)\n      setUuid(\n        Math.random()\n          .toString(36)\n          .substr(2, 9)\n      )\n      setSubStrLength(value.length - 2)\n      setNumSpaces(0)\n      setRestart(true)\n      fetch(\n        \"https://backend.shoonya.ai4bharat.org/logs/transliteration_selection/\",\n        {\n          method: \"POST\",\n          body: JSON.stringify(finalJson),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }\n      )\n        .then(async res => {\n          if (!res.ok) {\n            throw await res.json()\n          }\n        })\n        .catch(err => {\n          console.log(\"error\", err)\n        })\n    }\n\n    // bubble up event to the parent component\n    onChange && onChange(e)\n    onChangeText(value)\n\n    if (!shouldRenderSuggestions) {\n      return\n    }\n\n    // get the current index of the cursor\n    const caret = getInputSelection(e.target).end\n    const input = inputRef.current\n\n    if (!input) return\n\n    const caretPos = getCaretCoordinates(input, caret)\n\n    // search for the last occurence of the space character from\n    // the cursor\n    const indexOfLastSpace =\n      value.lastIndexOf(\" \", caret - 1) < value.lastIndexOf(\"\\n\", caret - 1)\n        ? value.lastIndexOf(\"\\n\", caret - 1)\n        : value.lastIndexOf(\" \", caret - 1)\n\n    // first character of the currently being typed word is\n    // one character after the space character\n    // index of last character is one before the current position\n    // of the caret\n    setMatchStart(indexOfLastSpace + 1)\n    setMatchEnd(caret - 1)\n\n    // currentWord is the word that is being typed\n    const currentWord = value.slice(indexOfLastSpace + 1, caret)\n    if (currentWord && enabled) {\n      // make an api call to fetch suggestions\n      if (numSpaces == 0 || restart) {\n        if (value.length >= 4) {\n          renderSuggestions(\n            currentWord,\n            value.substr(value.length - 4, value.length)\n          )\n        } else {\n          renderSuggestions(currentWord, value.substr(0, value.length))\n        }\n      } else {\n        renderSuggestions(currentWord, value.substr(subStrLength, value.length))\n      }\n\n      const rect = input.getBoundingClientRect()\n\n      // calculate new left and top of the suggestion list\n\n      // minimum of the caret position in the text input and the\n      // width of the text input\n      const left = Math.min(\n        caretPos.left,\n        rect.width - OPTION_LIST_MIN_WIDTH / 2\n      )\n\n      // minimum of the caret position from the top of the input\n      // and the height of the input\n      const top = Math.min(caretPos.top + OPTION_LIST_Y_OFFSET, rect.height)\n\n      setTop(top)\n      setLeft(left)\n    } else {\n      reset()\n    }\n  }\n\n  const handleKeyDown = event => {\n    const helperVisible = options.length > 0\n\n    if (helperVisible) {\n      if (triggerKeys.includes(event.key)) {\n        event.preventDefault()\n        handleSelection(selection)\n      } else {\n        switch (event.key) {\n          case KEY_ESCAPE:\n            event.preventDefault()\n            reset()\n            break\n          case KEY_UP:\n            event.preventDefault()\n            setSelection((options.length + selection - 1) % options.length)\n            break\n          case KEY_DOWN:\n            event.preventDefault()\n            setSelection((selection + 1) % options.length)\n            break\n          case KEY_LEFT:\n            event.preventDefault()\n            setSelection((options.length + selection - 1) % options.length)\n            break\n          case KEY_RIGHT:\n            event.preventDefault()\n            setSelection((selection + 1) % options.length)\n            break\n          default:\n            onKeyDown && onKeyDown(event)\n            break\n        }\n      }\n    } else {\n      onKeyDown && onKeyDown(event)\n    }\n  }\n\n  const handleBlur = event => {\n    if (!isTouchEnabled()) {\n      if (insertCurrentSelectionOnBlur && options[selection]) {\n        handleSelection(selection)\n      } else {\n        reset()\n      }\n    }\n    onBlur && onBlur(event)\n  }\n\n  const handleResize = () => {\n    // TODO implement the resize function to resize\n    // the helper on screen size change\n    const width = window.innerWidth\n    const height = window.innerHeight\n    setWindowSize({ width, height })\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize)\n    const width = window.innerWidth\n    const height = window.innerHeight\n    setWindowSize({ width, height })\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize)\n    }\n  }, [])\n\n  useEffect(() => {\n    getDirectionAndFont(lang).then(([direction, googleFont, fallbackFont]) => {\n      setDirection(direction)\n      // import google font if not already imported\n      if (googleFont) {\n        if (!document.getElementById(`font-${googleFont}`)) {\n          const link = document.createElement(\"link\")\n          link.id = `font-${googleFont}`\n          link.href = `https://fonts.googleapis.com/css?family=${googleFont}`\n          link.rel = \"stylesheet\"\n          document.head.appendChild(link)\n        }\n        setGoogleFont(`${googleFont}, ${fallbackFont ?? \"sans-serif\"}`)\n      } else {\n        setGoogleFont(null)\n      }\n    })\n  }, [lang])\n\n  const enableVoiceTyping = () => {\n    const target = inputRef.current\n    if (!target) return\n\n    const micBtn = document.createElement(\"button\");\n    micBtn.innerHTML = `<svg viewBox=\"-4 -4 24.00 24.00\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\" class=\"bi bi-mic-fill\"><g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g><g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\"> <path d=\"M5 3a3 3 0 0 1 6 0v5a3 3 0 0 1-6 0V3z\"></path> <path d=\"M3.5 6.5A.5.5 0 0 1 4 7v1a4 4 0 0 0 8 0V7a.5.5 0 0 1 1 0v1a5 5 0 0 1-4.5 4.975V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 .5-.5z\"></path> </g></svg>`;\n    micBtn.style.position = \"absolute\";\n    micBtn.style.padding = \"5px\";\n    micBtn.style.border = \"none\";\n    micBtn.style.cursor = \"pointer\";\n    micBtn.style.background = \"#fff\";\n    micBtn.style.borderRadius = \"50%\";\n    micBtn.style.boxShadow = \"0 0 6px rgba(0,0,0,0.2)\";\n    micBtn.style.bottom = \"5px\";\n    micBtn.style.right = \"5px\";\n    micBtn.style.width = \"32px\";\n    micBtn.style.height = \"32px\";\n    micBtn.style.display = \"flex\";\n    micBtn.style.alignItems = \"center\";\n    micBtn.style.justifyContent = \"center\";\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.style.position = \"relative\";\n    target.parentNode.insertBefore(wrapper, target);\n    wrapper.appendChild(target);\n    wrapper.appendChild(micBtn);\n\n    let mediaRecorder, audioChunks = [], isRecording = false;\n\n    const showLoader = () => {\n      micBtn.innerHTML = \"\";\n      const spinner = document.createElement(\"div\");\n      spinner.className = \"voice-typing-spinner\";\n      micBtn.appendChild(spinner);\n    };\n\n    const restoreMicIcon = () => {\n      micBtn.innerHTML = `<svg viewBox=\"-4 -4 24.00 24.00\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\" class=\"bi bi-mic-fill\"><g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g><g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\"> <path d=\"M5 3a3 3 0 0 1 6 0v5a3 3 0 0 1-6 0V3z\"></path> <path d=\"M3.5 6.5A.5.5 0 0 1 4 7v1a4 4 0 0 0 8 0V7a.5.5 0 0 1 1 0v1a5 5 0 0 1-4.5 4.975V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 .5-.5z\"></path> </g></svg>`;\n    };\n\n    const restoreStopIcon = () => {\n    micBtn.innerHTML = '<svg viewBox=\"-4 -4 24.00 24.00\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#ff2600\" class=\"bi bi-mic-fill\"><g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g><g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\"> <path d=\"M5 3a3 3 0 0 1 6 0v5a3 3 0 0 1-6 0V3z\"></path> <path d=\"M3.5 6.5A.5.5 0 0 1 4 7v1a4 4 0 0 0 8 0V7a.5.5 0 0 1 1 0v1a5 5 0 0 1-4.5 4.975V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 .5-.5z\"></path> </g></svg>';\n    };\n\n    micBtn.onclick = async () => {\n      if (!navigator.mediaDevices) {\n        alert(\"Browser doesn't support audio recording.\");\n        return;\n      }\n\n      if (isRecording) {\n        mediaRecorder.stop();\n        isRecording = false;\n        showLoader();\n      } else {\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        mediaRecorder = new MediaRecorder(stream);\n\n        audioChunks = [];\n\n        mediaRecorder.ondataavailable = event => audioChunks.push(event.data);\n\n        mediaRecorder.onstop = async () => {\n          showLoader();\n          const audioBlob = new Blob(audioChunks, { type: \"audio/webm\" });\n          const base64Audio = await blobToBase64Raw(audioBlob);\n\n          const transcript = await transcribeWithDhruva(asrApiUrl, lang, base64Audio);\n\n          const start = target.selectionStart;\n          const end = target.selectionEnd;\n          const text = target.value;\n          target.value = text.slice(0, start) + transcript + text.slice(end);\n          onChangeText(text.slice(0, start) + transcript + text.slice(end));\n          restoreMicIcon();\n        };\n\n        mediaRecorder.start();\n        isRecording = true;\n        restoreStopIcon();\n      }\n    };\n\n    if (!document.getElementById(\"voice-typing-spinner-style\")) {\n      const style = document.createElement(\"style\");\n      style.id = \"voice-typing-spinner-style\";\n      style.innerHTML = `\n      .voice-typing-spinner {\n        width: 16px;\n        height: 16px;\n        border: 3px solid #ccc;\n        border-top: 3px solid #333;\n        border-radius: 50%;\n        animation: spin 0.8s linear infinite;\n      }\n\n      @keyframes spin {\n        0% { transform: rotate(0deg); }\n        100% { transform: rotate(360deg); }\n      }\n    `;\n      document.head.appendChild(style);\n    }\n  }\n\n  async function blobToBase64Raw(blob) {\n    const arrayBuffer = await blob.arrayBuffer()\n    const uint8Array = new Uint8Array(arrayBuffer)\n    let binary = \"\"\n    for (let i = 0; i < uint8Array.length; i++) {\n      binary += String.fromCharCode(uint8Array[i])\n    }\n    return btoa(binary)\n  }\n\n  async function transcribeWithDhruva(apiURL, lang, base64Audio) {\n    try {\n      const response = await fetch(apiURL, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\", \"Authorization\": apiKey },\n        body: JSON.stringify({ audioBase64: base64Audio, lang })\n      })\n\n      const result = await response.json()\n      return result.transcript || \"\"\n    } catch (err) {\n      console.error(\"Transcription API error:\", err)\n      return \"\"\n    }\n  }\n\n  useEffect(() => {\n    if (enableASR) {\n      enableVoiceTyping()\n    }\n  }, [enableASR])\n\n  return (\n    <div\n      // position relative is required to show the component\n      // in the correct position\n      style={{\n        ...containerStyles,\n        position: \"relative\"\n      }}\n      className={containerClassName}\n    >\n      {renderComponent({\n        onChange: handleChange,\n        onKeyDown: handleKeyDown,\n        onBlur: handleBlur,\n        ref: inputRef,\n        value: value,\n        \"data-testid\": \"rt-input-component\",\n        lang: lang,\n        style: {\n          direction: direction,\n          ...(googleFont && { fontFamily: googleFont })\n        },\n        ...rest\n      })}\n      {shouldRenderSuggestions && options.length > 0 && (\n        <ul\n          style={{\n            backgroundClip: \"padding-box\",\n            backgroundColor: \"#fff\",\n            border: \"1px solid rgba(0, 0, 0, 0.15)\",\n            boxShadow: \"0 6px 12px rgba(0, 0, 0, 0.175)\",\n            display: horizontalView ? \"flex\" : \"block\",\n            fontSize: \"14px\",\n            listStyle: \"none\",\n            padding: \"1px\",\n            textAlign: \"center\",\n            zIndex: 20000,\n            left: `${left + offsetX}px`,\n            top: `${top + offsetY}px`,\n            position: \"absolute\",\n            width: \"auto\",\n            ...(googleFont && { fontFamily: googleFont })\n          }}\n          data-testid=\"rt-suggestions-list\"\n          lang={lang}\n        >\n          {/*\n           * convert to set and back to prevent duplicate list items\n           * that might happen while using backspace\n           */}\n          {Array.from(new Set(options)).map((item, index) => (\n            <li\n              style={\n                index === selection\n                  ? {\n                    cursor: \"pointer\",\n                    padding: \"10px\",\n                    minWidth: \"100px\",\n                    backgroundColor: \"#65c3d7\",\n                    color: \"#fff\"\n                  }\n                  : {\n                    cursor: \"pointer\",\n                    padding: \"10px\",\n                    minWidth: \"100px\",\n                    backgroundColor: \"#fff\"\n                  }\n              }\n              onMouseEnter={() => {\n                setSelection(index)\n              }}\n              onClick={() => handleSelection(index)}\n              key={item}\n            >\n              {item}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport { TriggerKeys, getTransliterateSuggestions }\nexport { getTransliterationLanguages }","import { isTouchEnabled } from \"./touch-util\";\nimport { getInputSelection, setCaretPosition } from \"./caret-util\";\n\nexport { isTouchEnabled, getInputSelection, setCaretPosition };\n","export function isTouchEnabled() {\n  return (\n    \"ontouchstart\" in window ||\n    navigator.maxTouchPoints > 0 ||\n    navigator.msMaxTouchPoints > 0\n  )\n}\n","export function getInputSelection(el) {\n  const start = 0\n  const end = 0\n\n  if (!el) {\n    return { start, end }\n  }\n\n  if (\n    typeof el.selectionStart === \"number\" &&\n    typeof el.selectionEnd === \"number\"\n  ) {\n    return { start: el.selectionStart, end: el.selectionEnd }\n  }\n\n  return { start, end }\n}\n\nexport function setCaretPosition(elem, caretPos) {\n  if (elem) {\n    if (elem.selectionStart) {\n      elem.focus()\n      elem.setSelectionRange(caretPos, caretPos)\n    } else {\n      elem.focus()\n    }\n  }\n}\n","export const TriggerKeys = {\n  KEY_RETURN: \"Enter\",\n  KEY_ENTER: \"Enter\",\n  KEY_TAB: \"Tab\",\n  KEY_SPACE: \" \",\n};\n","const MAX_CACHE_SIZE = 10000\nconst SAVE_THRESHOLD = 20\nconst CACHE_KEY = \"transliterationCache\"\n\nconst cache = loadCacheFromLocalStorage()\nlet newEntriesCount = 0\n\nfunction loadCacheFromLocalStorage() {\n  const cachedData = localStorage.getItem(CACHE_KEY)\n  return cachedData ? JSON.parse(cachedData) : {}\n}\n\nfunction saveCacheToLocalStorage() {\n  localStorage.setItem(CACHE_KEY, JSON.stringify(cache))\n}\n\nconst getWordWithLowestFrequency = dictionary => {\n  let lowestFreqWord = null\n  let lowestFreq = Infinity\n\n  for (const word in dictionary) {\n    if (dictionary[word].frequency < lowestFreq) {\n      lowestFreq = dictionary[word].frequency\n      lowestFreqWord = word\n    }\n  }\n\n  return lowestFreqWord\n}\n\nexport const getTransliterateSuggestions = async (\n  word,\n  customApiURL,\n  apiKey,\n  config\n) => {\n  const {\n    // numOptions = 5,\n    showCurrentWordAsLastSuggestion = true,\n    lang = \"hi\"\n  } = config || {}\n  // fetch suggestion from api\n  // const url = `https://www.google.com/inputtools/request?ime=transliteration_en_${lang}&num=5&cp=0&cs=0&ie=utf-8&oe=utf-8&app=jsapi&text=${word}`;\n  // let myHeaders = new Headers();\n  // myHeaders.append(\"Content-Type\", \"application/json\");\n\n  if (!cache[lang]) {\n    cache[lang] = {}\n  }\n\n  if (cache[lang][word.toLowerCase()]) {\n    cache[lang][word.toLowerCase()].frequency += 1\n    return cache[lang][word.toLowerCase()].suggestions\n  }\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: {\n      Authorization: apiKey\n    }\n  }\n\n  try {\n    const res = await fetch(\n      customApiURL +\n      `${lang}/${word === \".\" || word === \"..\"\n        ? \" \" + word.replace(\".\", \"%2E\")\n        : encodeURIComponent(word).replace(\".\", \"%2E\")\n      }`,\n      requestOptions\n    )\n    let data = await res.json()\n    console.log(\"library data\", data)\n    if (!customApiURL.includes(\"xlit-api\")) {\n      data.result = data.output[0].target\n    }\n    if (data && data.result.length > 0) {\n      const found = showCurrentWordAsLastSuggestion\n        ? [...data.result, word]\n        : data.result\n\n      if (Object.keys(cache[lang]).length >= MAX_CACHE_SIZE) {\n        const lowestFreqWord = getWordWithLowestFrequency(cache[lang])\n        if (lowestFreqWord) {\n          delete cache[lang][lowestFreqWord]\n        }\n      }\n\n      cache[lang][word.toLowerCase()] = {\n        suggestions: found,\n        frequency: 1\n      }\n\n      newEntriesCount += 1\n      if (newEntriesCount >= SAVE_THRESHOLD) {\n        saveCacheToLocalStorage()\n        newEntriesCount = 0\n      }\n\n      return found\n    } else {\n      if (showCurrentWordAsLastSuggestion) {\n        const fallback = [word]\n        return fallback\n      }\n      return []\n    }\n  } catch (e) {\n    // catch error\n    console.error(\"There was an error with transliteration\", e)\n    return []\n  }\n}\n\nwindow.addEventListener(\"beforeunload\", saveCacheToLocalStorage)\n","import { BASE_URL } from \"../constants/Urls\"\n\nexport const getTransliterationLanguages = async () => {\n  if (sessionStorage.getItem(\"indic_transliterate__supported_languages\")) {\n    return JSON.parse(\n      sessionStorage.getItem(\"indic_transliterate__supported_languages\") || \"\"\n    )\n  } else {\n    const apiURL = `${BASE_URL}languages`\n    const myHeaders = new Headers()\n    myHeaders.append(\"Content-Type\", \"application/json\")\n\n    const requestOptions = {\n      method: \"GET\"\n    }\n    try {\n      const res = await fetch(apiURL, requestOptions)\n      const data = await res.json()\n      sessionStorage.setItem(\n        \"indic_transliterate__supported_languages\",\n        JSON.stringify(data)\n      )\n      return data\n    } catch (e) {\n      console.error(\"There was an error with transliteration\", e)\n      return []\n    }\n  }\n}\n","export const BASE_URL = \"https://xlit-api.ai4bharat.org/\";\nexport const BASE_URL_TL = \"https://xlit-api.ai4bharat.org/tl/\";\n"],"names":[],"version":3,"file":"index.js.map"}